<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home - SyncPad</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.2.0/fonts/remixicon.css" rel="stylesheet" />
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        'sans': ['Inter', 'Helvetica', 'Arial', 'sans-serif'],
                    }
                }
            }
        }
    </script>
</head>

<body>
    <main class="w-full h-screen bg-zinc-100 font-['Helvetica']">
        <!-- Desktop Navigation -->
        <nav class="hidden md:flex px-10 justify-between items-center py-5">
            <!-- Section 1: Project Name (Top-Left) -->
            <div class="flex items-center gap-4">
                <a href="/home" class="text-2xl tracking-tight logo">SyncPad</a>
                <span class="text-sm text-gray-500 font-light">Mini Project</span>
            </div>
            
            <!-- Section 2: Home/Dashboard (Top-Center) -->
            <div class="flex items-center gap-4">
                <a href="/home" class="px-4 py-2 text-blue-600 font-medium flex items-center gap-2">
                    <i class="ri-home-line"></i>
                    Home
                </a>
                <a href="/collaborators" class="px-4 py-2 text-gray-700 hover:text-blue-600 transition-colors font-medium flex items-center gap-2">
                    <i class="ri-dashboard-line"></i>
                    Collaborators
                </a>
            </div>
            
            <!-- Section 3: Profile (Top-Right) -->
            <div class="flex items-center gap-3">
                <div class="text-right">
                    <div class="text-sm text-gray-600">Welcome, <%= user.name %></div>
                </div>
                <!-- Profile Icon -->
                <div class="relative">
                    <button onclick="toggleProfile()" class="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-lg font-bold hover:from-blue-600 hover:to-purple-700 transition-all duration-300 shadow-lg hover:shadow-xl" style="border-radius: 50%;">
                        <%= user.name.charAt(0).toUpperCase() %>
                    </button>
                    
                    <!-- Profile Dropdown -->
                    <div id="profileDropdown" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50">
                        <div class="bg-white h-full w-full p-6">
                            <div class="flex justify-between items-center mb-8">
                                <h2 class="text-2xl font-bold text-gray-800">Profile</h2>
                                <button onclick="toggleProfile()" class="p-2 text-gray-700 hover:text-blue-600 transition-colors">
                                    <i class="ri-close-line text-2xl"></i>
                                </button>
                            </div>
                            
                            <div class="flex items-center gap-4 mb-8">
                                <div class="w-20 h-20 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-3xl font-bold" style="border-radius: 50%;">
                                    <%= user.name.charAt(0).toUpperCase() %>
                                </div>
                                <div>
                                    <h3 class="text-2xl font-semibold text-gray-800"><%= user.name %></h3>
                                    <p class="text-lg text-gray-500"><%= user.email %></p>
                                </div>
                            </div>
                            
                            <div class="space-y-4">
                                <button onclick="editProfile()" class="w-full flex items-center gap-3 p-4 text-gray-700 hover:bg-gray-100 rounded-lg transition-colors text-lg">
                                    <i class="ri-edit-line text-xl"></i>
                                    Edit Profile
                                </button>
                                <button onclick="changePassword()" class="w-full flex items-center gap-3 p-4 text-gray-700 hover:bg-gray-100 rounded-lg transition-colors text-lg">
                                    <i class="ri-lock-line text-xl"></i>
                                    Change Password
                                </button>
                                <hr class="my-4">
                                <a href="/logout" class="w-full flex items-center gap-3 p-4 text-red-600 hover:bg-red-50 rounded-lg transition-colors text-lg">
                                    <i class="ri-logout-box-line text-xl"></i>
                                    Logout
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Mobile Navigation -->
        <nav class="md:hidden flex px-4 justify-between items-center py-4">
            <!-- Mobile Menu Button (Top-Left) -->
            <button onclick="toggleMobileMenu()" class="p-2 text-gray-700 hover:text-blue-600 transition-colors">
                <i id="menuIcon" class="ri-menu-line text-2xl"></i>
            </button>
            
            <!-- Project Name (Top-Center) -->
            <div class="flex flex-col items-center">
                <a href="/home" class="text-xl tracking-tight logo">SyncPad</a>
                <span class="text-xs text-gray-500 font-light">Mini Project</span>
            </div>
            
            <!-- Profile Picture (Top-Right) -->
            <div class="relative">
                <button onclick="toggleMobileProfile()" class="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-lg font-bold hover:from-blue-600 hover:to-purple-700 transition-all duration-300 shadow-lg hover:shadow-xl" style="border-radius: 50%;">
                    <%= user.name.charAt(0).toUpperCase() %>
                </button>
                
                <!-- Mobile Profile Dropdown -->
                <div id="mobileProfileDropdown" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50">
                    <div class="bg-white h-full w-full p-6">
                        <div class="flex justify-between items-center mb-8">
                            <h2 class="text-2xl font-bold text-gray-800">Profile</h2>
                            <button onclick="toggleMobileProfile()" class="p-2 text-gray-700 hover:text-blue-600 transition-colors">
                                <i class="ri-close-line text-2xl"></i>
                            </button>
                        </div>
                        
                        <div class="flex items-center gap-4 mb-8">
                            <div class="w-20 h-20 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-3xl font-bold" style="border-radius: 50%;">
                                <%= user.name.charAt(0).toUpperCase() %>
                            </div>
                            <div>
                                <h3 class="text-2xl font-semibold text-gray-800"><%= user.name %></h3>
                                <p class="text-lg text-gray-500"><%= user.email %></p>
                            </div>
                        </div>
                        
                        <div class="space-y-4">
                            <button onclick="editProfile()" class="w-full flex items-center gap-3 p-4 text-gray-700 hover:bg-gray-100 rounded-lg transition-colors text-lg">
                                <i class="ri-edit-line text-xl"></i>
                                Edit Profile
                            </button>
                            <button onclick="changePassword()" class="w-full flex items-center gap-3 p-4 text-gray-700 hover:bg-gray-100 rounded-lg transition-colors text-lg">
                                <i class="ri-lock-line text-xl"></i>
                                Change Password
                            </button>
                            <hr class="my-4">
                            <a href="/logout" class="w-full flex items-center gap-3 p-4 text-red-600 hover:bg-red-50 rounded-lg transition-colors text-lg">
                                <i class="ri-logout-box-line text-xl"></i>
                                Logout
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Mobile Menu Overlay -->
        <div id="mobileMenu" class="md:hidden hidden fixed inset-0 bg-black bg-opacity-50 z-40">
            <div class="bg-white h-full w-full p-6">
                <div class="flex justify-between items-center mb-8">
                    <h2 class="text-2xl font-bold text-gray-800">Menu</h2>
                    <button onclick="toggleMobileMenu()" class="p-2 text-gray-700 hover:text-blue-600 transition-colors">
                        <i class="ri-close-line text-2xl"></i>
                    </button>
                </div>
                
                <div class="space-y-6">
                    <a href="/home" class="flex items-center gap-3 p-4 bg-blue-50 rounded-lg text-blue-600">
                        <i class="ri-home-line text-xl"></i>
                        <span class="text-lg font-medium">Home</span>
                    </a>
                    
                    <a href="/collaborators" class="flex items-center gap-3 p-4 hover:bg-gray-50 rounded-lg text-gray-700">
                        <i class="ri-dashboard-line text-xl"></i>
                        <span class="text-lg font-medium">Collaborators</span>
                    </a>
                </div>
                
                <div class="mt-8 pt-6 border-t">
                    <div class="flex items-center gap-3 p-4">
                        <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-lg font-bold" style="border-radius: 50%;">
                            <%= user.name.charAt(0).toUpperCase() %>
                        </div>
                        <div>
                            <div class="font-medium text-gray-800"><%= user.name %></div>
                            <div class="text-sm text-gray-500"><%= user.email %></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="px-4 md:px-10 notes">
            <!-- Clean Welcome Section -->
            <div class="mb-8 mt-6 md:mt-10">
                <h1 class="text-2xl md:text-3xl font-bold text-gray-800 mb-2">Welcome, <%= user.name %>!</h1>
                <p class="text-gray-600">Manage your notes and stay organized</p>
            </div>


            <!-- Quick Actions Section -->
            <div class="mb-8">
                <h2 class="text-xl font-semibold text-gray-800 mb-4">Quick Actions</h2>
                <div class="flex gap-4">
                    <a href="/create" class="flex items-center gap-2 px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors shadow-md hover:shadow-lg">
                        <i class="ri-add-line"></i>
                        Create New Note
                    </a>
                </div>
            </div>


            <!-- All Notes Section -->
            <div class="mb-8">
                <h2 class="text-xl font-semibold text-gray-800 mb-6">Your Notes</h2>
                
                <% if (recentNotes && recentNotes.length > 0) { %>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        <% recentNotes.forEach(function(note) { %>
                            <div class="note-card bg-white rounded-lg shadow-md hover:shadow-lg transition-all duration-300 p-6 border border-gray-200 hover:border-blue-300">
                                <div class="flex justify-between items-start mb-4">
                                    <div class="flex gap-2 items-center">
                                        <% if (note.encrypted) { %>
                                            <span class="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full flex items-center gap-1">
                                                <i class="ri-lock-line"></i>
                                                Encrypted
                                            </span>
                                        <% } else { %>
                                            <span class="px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full flex items-center gap-1">
                                                <i class="ri-check-line"></i>
                                                Available
                                            </span>
                                            <!-- Share Icon -->
                                            <button onclick="copyShareLink('<%= note._id %>', '<%= note.isPublic %>', '<%= note.publicAccessToken %>')" 
                                                    class="p-1 text-gray-500 hover:text-blue-600 transition-colors" 
                                                    title="Copy share link">
                                                <i class="ri-share-line text-sm"></i>
                                            </button>
                                        <% } %>
                                        <% if (note.isPublic) { %>
                                            <span class="px-2 py-1 bg-purple-100 text-purple-800 text-xs rounded-full flex items-center gap-1">
                                                <i class="ri-share-line"></i>
                                                Shared
                                            </span>
                                        <% } %>
                                    </div>
                                    <span class="text-xs text-gray-500">Created on <%= note.date %></span>
                                </div>
                                
                                <h3 class="text-lg font-semibold mb-3 text-gray-800"><%= note.title %></h3>
                                
                                <div class="mb-4">
                                    <a href="/note/<%= note._id %>" class="text-blue-600 hover:text-blue-800 transition-colors">
                                        view note
                                    </a>
                                </div>
                                
                                <div class="flex gap-2">
                                    <a href="/edit/<%= note._id %>" class="flex-1 bg-orange-500 text-white px-3 py-2 rounded-md text-center hover:bg-orange-600 transition-colors">
                                        <i class="ri-pencil-line mr-1"></i>
                                        Edit
                                    </a>
                                    <a href="/delete/<%= note._id %>" class="flex-1 bg-red-500 text-white px-3 py-2 rounded-md text-center hover:bg-red-600 transition-colors">
                                        <i class="ri-delete-bin-line mr-1"></i>
                                        Delete
                                    </a>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                <% } else { %>
                    <div class="text-center py-12">
                        <i class="ri-file-text-line text-6xl text-gray-300 mb-4"></i>
                        <h3 class="text-xl text-gray-500 mb-2">No notes yet</h3>
                        <p class="text-gray-400 mb-4">Create your first note to get started</p>
                        <a href="/create" class="inline-flex items-center gap-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors">
                            <i class="ri-add-line"></i>
                            Create Your First Note
                        </a>
                    </div>
                <% } %>
            </div>
        </div>
        
        <!-- Footer -->
        <footer class="px-10 py-8 bg-gray-800 text-white">
            <div class="max-w-6xl mx-auto text-center">
                <p class="text-gray-400">© 2024 SyncPad Mini Project. Built with ❤️ for collaborative note-taking.</p>
            </div>
        </footer>
    </main>

    <script>
        // Desktop Profile dropdown toggle
        function toggleProfile() {
            const dropdown = document.getElementById('profileDropdown');
            dropdown.classList.toggle('hidden');
        }

        // Mobile Profile dropdown toggle
        function toggleMobileProfile() {
            const dropdown = document.getElementById('mobileProfileDropdown');
            dropdown.classList.toggle('hidden');
        }

        // Mobile Menu toggle
        function toggleMobileMenu() {
            const menu = document.getElementById('mobileMenu');
            const menuIcon = document.getElementById('menuIcon');
            
            menu.classList.toggle('hidden');
            
            if (menu.classList.contains('hidden')) {
                menuIcon.className = 'ri-menu-line text-2xl';
            } else {
                menuIcon.className = 'ri-close-line text-2xl';
            }
        }

        // Close dropdowns when clicking outside
        document.addEventListener('click', function(event) {
            const profileButton = event.target.closest('button[onclick="toggleProfile()"]');
            const mobileProfileButton = event.target.closest('button[onclick="toggleMobileProfile()"]');
            const profileDropdown = document.getElementById('profileDropdown');
            const mobileProfileDropdown = document.getElementById('mobileProfileDropdown');
            
            if (!profileButton && !profileDropdown.contains(event.target)) {
                profileDropdown.classList.add('hidden');
            }
            
            if (!mobileProfileButton && !mobileProfileDropdown.contains(event.target)) {
                mobileProfileDropdown.classList.add('hidden');
            }
        });

        // Edit profile function
        function editProfile() {
            alert('Edit Profile functionality will be implemented here');
        }

        // Change password function
        function changePassword() {
            alert('Change Password functionality will be implemented here');
        }

        // Note sharing functionality
        async function toggleSharing(noteId) {
            try {
                const response = await fetch(`/toggle-sharing/${noteId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });
                
                const result = await response.json();
                
                if (result.isPublic && result.shareLink) {
                    const fullUrl = window.location.origin + result.shareLink;
                    await navigator.clipboard.writeText(fullUrl);
                    alert('Note shared! Share link copied to clipboard: ' + fullUrl);
                } else {
                    alert('Note unshared successfully!');
                }
                
                location.reload();
            } catch (error) {
                console.error('Error toggling sharing:', error);
                alert('Error toggling sharing. Please try again.');
            }
        }

        // Copy share link functionality
        async function copyShareLink(noteId, isPublic, publicAccessToken) {
            try {
                let shareUrl;
                
                if (isPublic === 'true' && publicAccessToken) {
                    // Note is already shared, copy existing link
                    shareUrl = window.location.origin + '/shared/' + publicAccessToken;
                } else {
                    // Note is not shared, enable sharing first
                    const response = await fetch(`/toggle-sharing/${noteId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        }
                    });
                    
                    const result = await response.json();
                    
                    if (result.isPublic && result.shareLink) {
                        shareUrl = window.location.origin + result.shareLink;
                    } else {
                        throw new Error('Failed to create share link');
                    }
                }
                
                // Copy to clipboard
                await navigator.clipboard.writeText(shareUrl);
                
                // Show success notification
                showNotification('Share link copied to clipboard!', 'success');
                
                // Reload page to update UI
                setTimeout(() => {
                    location.reload();
                }, 1000);
                
            } catch (error) {
                console.error('Error copying share link:', error);
                showNotification('Error copying share link. Please try again.', 'error');
            }
        }

        // Notification function
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 ${
                type === 'success' ? 'bg-green-500 text-white' : 
                type === 'error' ? 'bg-red-500 text-white' : 
                'bg-blue-500 text-white'
            }`;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }
    </script>
</body>

</html>
